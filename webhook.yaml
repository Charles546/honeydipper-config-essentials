---
# Driver: Essentials.Drivers.webhook
#
#   receiving inbound web requests
#
#   Prereq:
#     * include the essentials bundle from this repo
#
#   Integration:
#     Config the driver in the `drivers` section with following parameters.
#
#     * loglevel: the verbosity of logs generated by this driver, DEBUG, INFO, WARNING, ERROR
#     * Addr: the listening address and port, e.g. ':8080', '127.0.0.1:7070' etc.
#
#   Example:
#     +---------------------------
#     | ---
#     | drivers:
#     |   webhook:
#     |     loglevel: DEBUG
#     |     Addr: ":8080"
#     +---------------------------
#
drivers:
  daemon:
    drivers:
      webhook:
        name: webhook
        type: builtin
        handlerData:
          shortName: webhook
  webhook:
    Addr: ":8080"

# RawEvent: ""
#
#   receiving inbound web requests
#
#   Conditions:
#
#   When used in rules, you can define criteria to match the payload.
#
#     * url: the path part of the url where the request is expected
#     * method: http method(s) allowed
#     * headers: a group of K/V pair describe the requirements for the headers
#     * form: the query parameters used in URL for GET, or in the body for POST/PUT
#     * json: if the request uses "application/json" content-type, this should match the json object
#
#   Event payload:
#
#   When used in workflow or actions, access the payload through `interpolation` with below paths.
#
#     * .event.url: the path part of the url
#     * .event.method: http methodd
#     * .event.headers: a map of header names each to a slice of header values
#     * .event.form: the query parameters used in URL for GET, or in the body for POST/PUT
#     * .event.json: if the request uses "application/json" content-type, this is the parsed json data structure
#
#   Example:
#     +---------------------------
#     | ---
#     | rules:
#     |   - when:
#     |       driver: webhook
#     |       rawEvent: ""  # you can omit this line
#     |       condition:
#     |         url: "/github/push"
#     |     do:
#     |       content: notify
#     |       data:
#     |         notify:
#     |           - "#my_slack_channel"
#     |         message:
#     |           text: repo {{ `{{ .event.json.repository.name }}` is updated
#     +---------------------------
#
